import { signDocument, verifySignature} from "../services/signatureService.js";/** * @desc   Menangani proses tanda tangan dokumen * @route  post /api/documents/:id/sign * @access Private (Membutuhkan Autentikasi) */export const handleSignDocument = async (req, res) => {    try {        const { id: documentId } = req.params;        const { id, userId } = req.user;        const { method, signatureImage, placements } = req.body;        if (!method || !placements) {            return res.status(400).json({                message: 'Method (method) dan data penempatan (placements) diperlukan.'            });        }        const result = await signDocument(documentId, userId, {            method,            signatureImage,            placements        });        res.status(200).json({            message: 'Dokumen berhasil ditandatangani dan disimpan.',            data: result        });    } catch (error) {        console.error("Controller Error- handlerSignDocument:", error);        res.status(500).json({            message: 'Terjadi kesalahan di server.',            error: error.message        });    }};/** * @desc    Menangani verifikasi tanda tangan dari QR Code * @route   GET /api/signatures/verify * @access  Public */export const handleVerifySignature = async (req, res) => {    try {        const { docId, userId } = req.query;        if (!docId || !userId) {            return res.status(400).json({                message: 'Parameter docId dan userId diperlukan untuk verifikasi. '            });        }        const result = await verifySignature(docId, userId);        res.status(200).json(result);    } catch (error) {        console.error("Controller Error - handleVerifySignature:", error);        res.status(500).json({            message: 'Terjadi kesalahan di server. ',            error: error.message        });    }}