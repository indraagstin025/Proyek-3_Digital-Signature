import winston from 'winston';// Tentukan level loggingconst levels = {    error: 0,    warn: 1,    info: 2,    http: 3,    debug: 4,};// Tentukan warna untuk setiap level (opsional, bagus untuk development)const colors = {    error: 'red',    warn: 'yellow',    info: 'green',    http: 'magenta',    debug: 'white',};winston.addColors(colors);// Tentukan format logconst format = winston.format.combine(    winston.format.timestamp({ format: 'YYYY-MM-DD HH:mm:ss:ms' }),    // Jika di development, gunakan format warna-warni    process.env.NODE_ENV === 'development'        ? winston.format.colorize({ all: true })        : winston.format.uncolorize(),    winston.format.printf(        (info) => `${info.timestamp} ${info.level}: ${info.message}`,    ),);// Tentukan "transports" (tujuan output log)const transports = [    // Selalu tampilkan log di console    new winston.transports.Console(),    // Simpan log error ke file terpisah    new winston.transports.File({        filename: 'logs/error.log',        level: 'error',    }),    // Simpan semua log ke file lain    new winston.transports.File({ filename: 'logs/all.log' }),];// Buat instance loggerconst logger = winston.createLogger({    level: process.env.NODE_ENV === 'development' ? 'debug' : 'http',    levels,    format,    transports,});export default logger;