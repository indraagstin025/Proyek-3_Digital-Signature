import { validationResult } from 'express-validator';import CommonError from '../errors/CommonError.js'; // You can create a specific validation error if you prefer/** * Middleware to check for validation errors from express-validator. * If errors exist, it stops the request and sends a 400 response. * If not, it passes control to the next handler. */export const validate = (req, res, next) => {    const errors = validationResult(req);    if (errors.isEmpty()) {        return next();    }    // Extract error messages    const extractedErrors = errors.array().map(err => ({ [err.path]: err.msg }));    // We can throw a custom error to be handled by the global error handler    // This makes it consistent with our other error handling.    // For simplicity, I'll send a response directly here, but throwing is also a great option.    return res.status(400).json({        message: "Input tidak valid.",        errors: extractedErrors,    });};