// src/middleware/authMiddleware.jsimport { supabase } from '../config/supabaseClient.js';import { PrismaClient } from '@prisma/client';const prisma = new PrismaClient();const authMiddleware = async (req, res, next) => {    const authHeader = req.headers.authorization;    if (!authHeader || !authHeader.startsWith('Bearer ')) {        return res.status(401).json({ message: 'Akses ditolak. Token tidak ditemukan.' });    }    const token = authHeader.split(' ')[1];    const { data: { user: supabaseUser }, error } = await supabase.auth.getUser(token);    if (error || !supabaseUser) {        return res.status(401).json({ message: 'Token tidak valid atau sudah kadaluarsa.' });    }    // Ambil data user dari database lokal dengan ID dari Supabase    const localUser = await prisma.user.findUnique({        where: { id: supabaseUser.id },        select: { id: true, email: true, name: true, isSuperAdmin: true },    });    if (!localUser) {        return res.status(404).json({ message: 'Profil user tidak ditemukan di database.' });    }    // Gabungkan data dan tempelkan ke request    req.user = {        ...supabaseUser,        ...localUser,        role: localUser.isSuperAdmin ? 'super_admin' : 'basic_user'    };    next();};export default authMiddleware;