import BaseError from "../errors/BaseError.js";import multer from "multer";const errorHandler = (err, req, res, next) => {    console.log("--- ERROR DITANGKAP OLEH HANDLER GLOBAL ---");    console.error(err);    console.log("-----------------------------------------");    err.statusCode = err.statusCode || 500;    err.status = err.status || "error";    // Multer error (upload file)    if (err instanceof multer.MulterError) {        if (err.code === "LIMIT_FILE_SIZE") {            return res.status(400).json({                status: "fail",                code: "LIMIT_FILE_SIZE",                message: `Ukuran file terlalu besar. Maksimal ${process.env.MAX_FILE_SIZE_MB || 5} MB.`,            });        }        return res.status(400).json({            status: "fail",            code: err.code,            message: err.message,        });    }    // Error dari custom class turunan BaseError    if (err instanceof BaseError) {        return res.status(err.statusCode).json({            status: err.status,            code: err.code,            message: err.message,        });    }    // Error khusus dokumen terenkripsi    if (err.code === "DOCUMENT_ENCRYPTED") {        return res.status(403).json({            status: "fail",            code: "DOCUMENT_ENCRYPTED",            message: "Dokumen ini terproteksi kata sandi atau terenkripsi dan tidak dapat diubah.",        });    }    // Fallback error lain    return res.status(500).json({        status: "error",        code: "INTERNAL_SERVER_ERROR",        message: err.message || "Terjadi kesalahan internal pada server",    });};export default errorHandler;