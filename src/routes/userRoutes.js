import express from 'express';import authMiddleware from '../middleware/authMiddleware.js';import { checkAdminRole } from '../middleware/roleMiddleware.js';import { userValidation } from "../validators/userValidator.js";import { validate } from "../middleware/validate.js";import { uploadImage } from "../middleware/uploadMiddleware.js";export default (userController, adminController) => {    const router = express.Router();    /**     * @route   GET /api/users/me     * @desc    Ambil profil user yang sedang login     * @access  Private     */    router.get('/me', authMiddleware, userController.getMyProfile);    /**     * @route   PATCH /api/users/me     * @desc    Perbarui profil user yang sedang login (parsial)     * @access  Private     */    // Menggunakan PATCH karena ini adalah update parsial, bukan penggantian total.    router.patch(        '/me',        authMiddleware,        uploadImage.single("profilePicture"),        userValidation.update,        validate,        userController.updateMyProfile    );    /**     * @route   GET /api/users/me/profile-pictures     * @desc    Ambil semua history foto profil user     * @access  Private     */    router.get(        '/me/profile-pictures',        authMiddleware,        userController.getProfilePictures    );    /**     * @route   POST /api/users/me/profile-pictures/:pictureId/use     * @desc    Gunakan kembali foto lama sebagai foto profil     * @access  Private     */    router.post(        '/me/profile-pictures/:pictureId/use',        authMiddleware,        userValidation.pictureId, // <-- Tambahkan validasi untuk parameter URL        validate,                 // <-- Tambahkan pengecek hasil validasi        userController.useOldProfilePicture    );    /**     * @route   DELETE /api/users/me/profile-pictures/:pictureId     * @desc    Hapus salah satu foto profil dari history     * @access  Private     */    router.delete(        '/me/profile-pictures/:pictureId',        authMiddleware,        userValidation.pictureId, // <-- Tambahkan validasi untuk parameter URL        validate,                 // <-- Tambahkan pengecek hasil validasi        userController.deleteProfilePicture    );    /**     * @route   GET /api/users/all-users     * @desc    Ambil semua user (hanya admin)     * @access  Private (Admin Only)     */    router.get('/all-users', authMiddleware, checkAdminRole, adminController.getAllUsers);    return router;};