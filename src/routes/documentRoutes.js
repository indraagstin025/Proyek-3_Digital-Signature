import express from "express";import * as documentController from "../controllers/documentController.js";import authMiddleware from "../middleware/authMiddleware.js";// Ganti nama import agar lebih singkat dan sesuai dengan isi filenyaimport upload from "../middleware/uploadMiddleware.js";const router = express.Router();/** * Upload dokumen baru. * Method: POST * Endpoint: /api/documents */// Di sini kita pakai upload.single() karena user akan mengunggah SATU file.// 'documentFile' adalah nama field yang harus dikirim dari Postman/frontend.router.post("/",    authMiddleware,    upload.single('documentFile'),    documentController.createDocument);/** * Ambil semua dokumen milik user. * Method: GET * Endpoint: /api/documents */// GET tidak butuh Multer karena tidak ada file yang di-upload.router.get("/", authMiddleware, documentController.getAllDocuments);/** * Ambil detail dokumen berdasarkan ID. * Method: GET * Endpoint: /api/documents/:id */// GET by ID juga tidak butuh Multer.router.get("/:id", authMiddleware, documentController.getDocumentById);/** * Update dokumen berdasarkan ID. * Method: PUT atau PATCH * Endpoint: /api/documents/:id */// PUT/PATCH butuh Multer karena bisa jadi user ingin mengganti file yang sudah ada.router.put("/:id",    authMiddleware,    upload.single('documentFile'),    documentController.updateDocument);/** * Upload dokumen untuk tanda - tangan * Method POST * Endpoint: /api/documents/:id/upload-signed */router.post( "/:id/upload-signed",    authMiddleware,    upload.single('signedFile'),    documentController.uploadSignedDocument    );/** * Hapus dokumen berdasarkan ID. * Method: DELETE * Endpoint: /api/documents/:id */// DELETE tidak butuh Multer karena hanya menghapus data.router.delete("/:id", authMiddleware, documentController.deleteDocument);export default router;