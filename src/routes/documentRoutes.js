import express from "express";import authMiddleware from "../middleware/authMiddleware.js";import { uploadDocument } from "../middleware/uploadMiddleware.js";import { documentValidation } from "../validators/documentValidator.js"; // <-- Impor validatorimport { validate } from "../middleware/validate.js";                 // <-- Impor validate helper/** * @description Factory function yang membuat dan mengonfigurasi router Express untuk endpoint dokumen. * @param {object} documentController - Instance dari documentController yang berisi semua handler. * @returns {express.Router} Router Express yang sudah dikonfigurasi. */export default (documentController) => {    const router = express.Router();    // --- Document Routes ---    router.post("/",        authMiddleware,        uploadDocument.single('documentFile'),        documentValidation.create, // <-- Tambahkan aturan validasi        validate,                  // <-- Tambahkan pengecek hasil validasi        documentController.createDocument    );    router.get("/",        authMiddleware,        documentController.getAllDocuments    );    router.get("/:id",        authMiddleware,        documentController.getDocumentById    );    // Ganti PUT menjadi PATCH untuk update parsial, ini praktik yang lebih umum    router.patch("/:id",        authMiddleware,        documentValidation.update, // <-- Tambahkan aturan validasi        validate,                  // <-- Tambahkan pengecek hasil validasi        documentController.updateDocument    );    router.delete("/:id",        authMiddleware,        documentController.deleteDocument    );    // --- Document Version Routes ---    router.get("/:documentId/versions",        authMiddleware,        documentController.getDocumentHistory    );    router.post("/:documentId/versions/:versionId/use",        authMiddleware,        documentController.useOldVersion    );    router.delete("/:documentId/versions/:versionId",        authMiddleware,        documentController.deleteVersion    );    return router;};