import { supabase, supabaseBucket } from '../../config/supabaseClient.js';import FileStorage from '../interface/FileStorage.js';/** * @description Implementasi FileStorage menggunakan Supabase Storage. */class SupabaseFileStorage extends FileStorage {    async downloadFile(filePath) {        const { data, error } = await supabase            .storage            .from(supabaseBucket)            .download(filePath);        if (error) throw new Error(`Download gagal: ${error.message}`);        return data;    }    async uploadFile(filePath, buffer, contentType) {        const fullPath = `document_user/${filePath}`;        const { error } = await supabase.storage            .from(supabaseBucket)            .upload(fullPath, buffer, { contentType, upsert: true });        if (error) throw new Error(`Upload gagal: ${error.message}`);        return fullPath;    }    async uploadProfilePicture(file, userId) {        if (!file) throw new Error('File tidak ditemukan.');        // pakai bucket default atau khusus untuk profile        const bucketName = 'digital_signature';        const fileName = `public/${userId}-${Date.now()}-${file.originalname}`;        const { error } = await supabase.storage            .from(bucketName)            .upload(fileName, file.buffer, { contentType: file.mimetype, upsert: true });        if (error) throw new Error(`Upload profile gagal: ${error.message}`);        const { data } = supabase.storage.from(bucketName).getPublicUrl(fileName);        return data.publicUrl;    }}export default SupabaseFileStorage;