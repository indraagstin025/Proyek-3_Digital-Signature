import { supabase, supabaseBucket } from "../config/supabaseClient.js";import FileStorage from "./FileStorage.js";/** * @description Implementasi penyimpanan file menggunakan Supabase Storage. * Kelas ini bertanggung jawab untuk mengunduh dan mengunggah file * ke layanan Supabase Storage */class SupabaseFileStorage extends FileStorage {    /**     * @description Mengunduh file dari penyimpanan.     * @param {string} filePath - Path file di penyimpanan     * @returns {Promise<any>}     */    async downloadFile(filePath) {        const { data, error } = await supabase.storage.from(supabaseBucket).download(filePath);        if (error) throw new Error(error.message);        return data;    }    /**     * @description mengunggah file ke penyimpanan.     * @param {string} filePath - Path file di penyimpanan.     * @param {Buffer} buffer - Buffer file yang akan diunggah.     * @param {string} contentType - Tipe konten dari file.     * @returns {Promise<void>}     */    async uploadFile(filePath, buffer, contentType) {        const fullPath = `document_user/${filePath}`;        console.log("DEBUG upload path:", fullPath);        const { error } = await supabase.storage            .from(supabaseBucket)            .upload(fullPath, buffer, { contentType, upsert: true });        if (error) throw new Error(error.message);        return fullPath;    }    /**     * @description Mengunggah file foto profil ke bucket khusus dan mengembalikan URL public.     * @param {object} file - Object file dari multer (req.file).     * @param {string} userId -ID pengguna untuk membuat nama file yang unik.     * @returns {Promise<string>} - URL publik dari gambar yang diunggah.     */    async uploadProfilePicture(file, userId) {        if (!file) {            throw new Error('File tidak ditemukan untuk diunggah');        }        const bucketName = 'profile-pictures';        const fileName = `public/${userId}-${Date.now()}`;        const { error: uploadError } = await supabase.storage            .from(bucketName)            .upload(fileName, file.buffer, {                contentType: file.mimetype,            });        if(uploadError) {            console.error("Supabase upload error:", uploadError);            throw new Error('Gagal mengunggah gambar profile.');        }        const { data } = supabase.storage            .from(bucketName)            .getPublicUrl(fileName);        return data.publicUrl;    }}export default SupabaseFileStorage;