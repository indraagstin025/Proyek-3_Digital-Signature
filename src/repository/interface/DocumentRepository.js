/** * @description Abstraksi untuk operasi pada entitas 'Document'. * Mendefinisikan kontrak yang harus diikuti oleh implementasi konkret (misal: PrismaDocumentRepository). */export class DocumentRepository {    /**     * @description Membuat Dokumen baru beserta Versi pertamanya.     * @param {string} userId     * @param {string} title     * @param {string} url     * @param {string} hash     * @returns {Promise<object>}     */    async createWithFirstVersion(userId, title, url, hash) {        throw new Error('Metode createWithFirstVersion belum diimplementasikan.');    }    /**     * @description Menemukan semua dokumen milik seorang user.     * @param {string} userId     * @returns {Promise<object[]>}     */    async findAllByUserId(userId) {        throw new Error('Metode findAllByUserId belum diimplementasikan.');    }    /**     * @description Menemukan satu dokumen berdasarkan ID dan ID user.     * @param {string} documentId     * @param {string} userId     * @returns {Promise<object|null>}     */    async findById(documentId, userId) {        throw new Error('Metode findById belum diimplementasikan.');    }    /**     * @description Memperbarui data pada record dokumen.     * @param {string} documentId     * @param {object} dataToUpdate     * @returns {Promise<object>}     */    async update(documentId, dataToUpdate) {        throw new Error('Metode update belum diimplementasikan.');    }    /**     * @description Menghapus dokumen berdasarkan ID.     * @param {string} documentId     * @returns {Promise<void>}     */    async deleteById(documentId) {        throw new Error('Metode deleteById belum diimplementasikan.');    }}