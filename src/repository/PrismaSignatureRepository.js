import { PrismaClient } from '@prisma/client';import SignatureRepository from './SignatureRepository.js';const prisma = new PrismaClient();/** * @description Impelementasi repository tanda tangan menggunakan Prisma. * Kelas ini bertanggung jawab atas semua interaksi dengan database * terkait entitas dokumen dan tanda tangan. */class PrismaSignatureRepository extends SignatureRepository {    /**     * @description Mengambil dokumen dari database berdasarkan ID.     * @param {number|string} documentId - ID dokumen.     * @returns {promise<object|null>}     */    async getDocumentById(documentId){        return prisma.document.findUnique({ where: { id: parseInt(documentId) } });    }    /**     * @description Memperbarui status atau data dokumen di database.     * @param {number|string} documentId - ID dokumen.     * @param {object} data - Data yang akan diperbarui.     * @returns {Promise<object>}     */    async updateDocument(documentId, data) {        return prisma.document.update({ where: { id: parseInt(documentId)}, data});    }    /**     * @description Mengambil detail tanda tangan dari database.     * @param {number|string} documentId - ID dokumen.     * @param {string} userId - ID pengguna.     * @returns {Promise<object|null>}     */    async getSignatureDetails(documentId, userId) {        return prisma.signaturePersonal.findFirst({            where: { documentId: parseInt(documentId), userId, method: "qrcode"},            include: {                user: { select: { name: true, email: true } },                document: { select: { title: true } },            }        });    }}export default PrismaSignatureRepository;