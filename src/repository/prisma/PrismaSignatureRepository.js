import { PrismaClient } from '@prisma/client';import SignatureRepository from '../interface/SignatureRepository.js';const prisma = new PrismaClient();/** * @description Implementasi SignatureRepository menggunakan Prisma. * Bertanggung jawab atas interaksi database terkait dokumen & tanda tangan. */class PrismaSignatureRepository extends SignatureRepository {    /**     * @param {number|string} documentId - ID dokumen     * @returns {Promise<object|null>} Dokumen     */    async getDocumentById(documentId) {        return prisma.document.findUnique({            where: { id: parseInt(documentId, 10) },        });    }    /**     * @param {number|string} documentId - ID dokumen     * @param {object} data - Data baru dokumen     * @returns {Promise<object>} Dokumen yang diperbarui     */    async updateDocument(documentId, data) {        return prisma.document.update({            where: { id: parseInt(documentId, 10) },            data,        });    }    /**     * @param {number|string} documentId - ID dokumen     * @param {string} userId - ID pengguna     * @returns {Promise<object|null>} Detail tanda tangan     */    async getSignatureDetails(documentId, userId) {        return prisma.signaturePersonal.findFirst({            where: {                documentId: parseInt(documentId, 10),                userId,                method: 'qrcode',            },            include: {                user: { select: { name: true, email: true } },                document: { select: { title: true } },            },        });    }}export default PrismaSignatureRepository;