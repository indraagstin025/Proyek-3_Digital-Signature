// src/validators/userValidator.jsimport { body, param } from 'express-validator';// Validasi untuk body saat update profileconst updateProfileValidator = [    body('name')        .optional()        .trim()        .notEmpty().withMessage('Nama tidak boleh kosong jika diisi.'),    body('phoneNumber')        .optional()        .trim()        .isMobilePhone('id-ID').withMessage('Format nomor telepon Indonesia tidak valid.'),    body('title')        .optional()        .trim()        .notEmpty().withMessage('Jabatan tidak boleh kosong jika diisi.'),    body('address')        .optional()        .trim()        .notEmpty().withMessage('Alamat tidak boleh kosong jika diisi.'),    body('profilePictureId')        .optional()        .isUUID().withMessage('Format ID foto profil tidak valid.'), // <-- KOMA DITAMBAHKAN DI SINI    body().custom((value, { req }) => {        const { name, phoneNumber, title, address, profilePictureId } = req.body;        const file = req.file;        // Cek jika tidak ada data teks, tidak ada ID foto lama, dan tidak ada file baru        const isBodyEmpty = !name && !phoneNumber && !title && !address && !profilePictureId;        const isFileEmpty = !file;        if (isBodyEmpty && isFileEmpty) {            throw new Error('Tidak ada data yang dikirim. Minimal isi satu kolom atau unggah satu foto untuk diperbarui.');        }        return true; // Validasi berhasil    })];// Validasi untuk parameter URL (misal: saat menghapus foto)const pictureIdValidator = [    param('pictureId').isUUID().withMessage('Format ID foto di URL tidak valid.')];export const userValidation = {    updateProfile: updateProfileValidator,    pictureIdParam: pictureIdValidator,};