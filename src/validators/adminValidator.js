import { body, param } from 'express-validator';// Validasi untuk membuat user baru oleh adminconst createUserValidation = [    body('email')        .isEmail()        .withMessage('Format email tidak valid.')        .normalizeEmail(),    body('name')        .notEmpty()        .withMessage('Nama tidak boleh kosong.')        .trim(),    body('password').custom((value) => {        const errors = [];        if (!value || value.length < 8) errors.push('Password minimal harus 8 karakter.');        if (!/[A-Z]/.test(value)) errors.push('Password harus mengandung minimal satu huruf besar (A-Z).');        if (!/[a-z]/.test(value)) errors.push('Password harus mengandung minimal satu huruf kecil (a-z).');        if (!/[0-9]/.test(value)) errors.push('Password harus mengandung minimal satu angka (0-9).');        if (errors.length > 0) throw new Error(errors.join(' '));        return true;    }),    body('isSuperAdmin')        .optional()        .isBoolean()        .withMessage('Nilai isSuperAdmin harus boolean (true/false).'),];// Validasi untuk parameter URL saat menghapus userconst deleteUserValidation = [    param('userId')        .isUUID()        .withMessage('Format User ID tidak valid.'),];// --- TAMBAHAN UNTUK UPDATE ---// Validasi untuk memperbarui data penggunaconst updateUserValidation = [    // Validasi parameter URL    param('userId')        .isUUID()        .withMessage('Format User ID tidak valid.'),    // Validasi body (semua opsional)    body('email')        .optional()        .isEmail()        .withMessage('Format email tidak valid.')        .normalizeEmail(),    body('name')        .optional()        .notEmpty()        .withMessage('Nama tidak boleh kosong.')        .trim(),    // Jika password diisi, validasi panjangnya. Jika tidak, abaikan.    body('password')        .optional({ checkFalsy: true }) // Anggap string kosong sebagai "tidak ada"        .isLength({ min: 8 })        .withMessage('Password minimal harus 8 karakter.'),    body('isSuperAdmin')        .optional()        .isBoolean()        .withMessage('Nilai isSuperAdmin harus boolean (true/false).'),];// --- AKHIR TAMBAHAN ---// Ekspor semua aturan dalam satu objekexport const adminValidation = {    createUser: createUserValidation,    deleteUser: deleteUserValidation,    updateUser: updateUserValidation, // <-- Tambahkan di sini};